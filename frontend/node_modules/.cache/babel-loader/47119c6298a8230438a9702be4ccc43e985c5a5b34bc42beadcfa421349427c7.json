{"ast":null,"code":"var _jsxFileName = \"/Users/johnharrisii/Documents/my-asset_library-site/frontend/src/components/Hero.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Hero.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [hasVideoStarted, setHasVideoStarted] = useState(false);\n  const toggleVideo = () => {\n    setIsVideoPlaying(true);\n  };\n  const onVideoPlay = () => {\n    setHasVideoStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `hero-section ${isVideoPlaying ? \"video-playing\" : \"\"}`,\n    style: {\n      backgroundImage: isVideoPlaying ? \"none\" : \"url('/assets/onxytree.png')\",\n      // Remove image once video starts\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center center\",\n      height: \"400px\"\n    },\n    children: [!isVideoPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"YEAR OVER YEAR. KNOWLEDGE SHARED. LEGACIES BUILT.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ONYX 81\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagline\",\n        children: \"STRONGER TOGETHER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Asset Library Promo Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"An extension of our community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-length\",\n        children: \"02:05\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"video-link\",\n        onClick: toggleVideo,\n        children: \"Watch Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), isVideoPlaying && !hasVideoStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://1drv.ms/v/c/55b3d777fd08d7d0/IQS3Txg1GsYRRowCTUfnjej3AZnw5gTd41mKbKTpQvnlfa8\",\n        width: \"960\",\n        height: \"540\",\n        frameBorder: \"0\",\n        scrolling: \"no\",\n        allowFullScreen: true,\n        onLoad: onVideoPlay // Trigger when video starts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Hero, \"yHpvqYiITEJC5yzZLotewCudvWY=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hero","_s","isVideoPlaying","setIsVideoPlaying","hasVideoStarted","setHasVideoStarted","toggleVideo","onVideoPlay","className","style","backgroundImage","backgroundSize","backgroundPosition","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","width","frameBorder","scrolling","allowFullScreen","onLoad","_c","$RefreshReg$"],"sources":["/Users/johnharrisii/Documents/my-asset_library-site/frontend/src/components/Hero.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Hero.css\";\n\nfunction Hero() {\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [hasVideoStarted, setHasVideoStarted] = useState(false);\n\n  const toggleVideo = () => {\n    setIsVideoPlaying(true);\n  };\n\n  const onVideoPlay = () => {\n    setHasVideoStarted(true);\n  };\n\n  return (\n    <section\n      className={`hero-section ${isVideoPlaying ? \"video-playing\" : \"\"}`}\n      style={{\n        backgroundImage: isVideoPlaying ? \"none\" : \"url('/assets/onxytree.png')\", // Remove image once video starts\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n        height: \"400px\",\n      }}\n    >\n      {/* Show the overlay only when video isn't playing */}\n      {!isVideoPlaying && (\n        <div className=\"hero-overlay\">\n          <h2>YEAR OVER YEAR. KNOWLEDGE SHARED. LEGACIES BUILT.</h2>\n          <h3>ONYX 81</h3>\n          <div className=\"tagline\">STRONGER TOGETHER</div>\n          <p>Asset Library Promo Video</p>\n          <small>An extension of our community</small>\n          <div className=\"video-length\">02:05</div>\n          <button className=\"video-link\" onClick={toggleVideo}>\n            Watch Video\n          </button>\n        </div>\n      )}\n\n      {/* Video section that appears once video is playing */}\n      {isVideoPlaying && !hasVideoStarted && (\n        <div className=\"video-container\">\n          <iframe\n            src=\"https://1drv.ms/v/c/55b3d777fd08d7d0/IQS3Txg1GsYRRowCTUfnjej3AZnw5gTd41mKbKTpQvnlfa8\"\n            width=\"960\"\n            height=\"540\"\n            frameBorder=\"0\"\n            scrolling=\"no\"\n            allowFullScreen\n            onLoad={onVideoPlay} // Trigger when video starts\n          ></iframe>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default Hero;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IACES,SAAS,EAAE,gBAAgBN,cAAc,GAAG,eAAe,GAAG,EAAE,EAAG;IACnEO,KAAK,EAAE;MACLC,eAAe,EAAER,cAAc,GAAG,MAAM,GAAG,6BAA6B;MAAE;MAC1ES,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,eAAe;MACnCC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,GAGD,CAACZ,cAAc,iBACdH,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAM,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,EAAI;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DnB,OAAA;QAAAe,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBnB,OAAA;QAAKS,SAAS,EAAC,SAAS;QAAAM,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDnB,OAAA;QAAAe,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChCnB,OAAA;QAAAe,QAAA,EAAO;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CnB,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAM,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCnB,OAAA;QAAQS,SAAS,EAAC,YAAY;QAACW,OAAO,EAAEb,WAAY;QAAAQ,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAGAhB,cAAc,IAAI,CAACE,eAAe,iBACjCL,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAM,QAAA,eAC9Bf,OAAA;QACEqB,GAAG,EAAC,sFAAsF;QAC1FC,KAAK,EAAC,KAAK;QACXR,MAAM,EAAC,KAAK;QACZS,WAAW,EAAC,GAAG;QACfC,SAAS,EAAC,IAAI;QACdC,eAAe;QACfC,MAAM,EAAElB,WAAY,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACjB,EAAA,CArDQD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAuDb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}